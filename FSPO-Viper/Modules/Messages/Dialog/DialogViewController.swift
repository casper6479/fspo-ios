//
//  DialogViewController.swift
//  FSPO-Viper
//
//  Created Николай Борисов on 05/08/2018.
//  Copyright © 2018 Николай Борисов. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import LayoutKit

class DialogViewController: UIViewController, DialogViewProtocol {
    func showNewRows(source: JSONDecoding.DialogsApi) {
        self.reloadTableView(width: view.bounds.width, synchronous: false, data: source)
    }
	var presenter: DialogPresenterProtocol?
    private var reloadableViewLayoutAdapter: ReloadableViewLayoutAdapter!
    private var tableView: UITableView!
	override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = UIColor(red: 246/255, green: 251/255, blue: 254/255, alpha: 1)
        tableView = UITableView(frame: view.bounds, style: .plain)
        tableView.autoresizingMask = [.flexibleWidth, .flexibleHeight]
        reloadableViewLayoutAdapter = DialogsReloadableViewLayoutAdapter(reloadableView: tableView)
        tableView.dataSource = reloadableViewLayoutAdapter
        tableView.delegate = reloadableViewLayoutAdapter
        tableView.separatorColor = .clear
        tableView.allowsSelection = false
        tableView.backgroundColor = UIColor(red: 246/255, green: 251/255, blue: 254/255, alpha: 1)
        let background = UIView(frame: view.bounds)
        let rofl = UILabel(frame: CGRect(x: 100, y: 100, width: 200, height: 100))
        rofl.text = "ЗАГРУЗКА"
        background.addSubview(rofl)
        background.backgroundColor = UIColor(red: 246/255, green: 251/255, blue: 254/255, alpha: 1)
        view.addSubview(background)
        view.addSubview(tableView)
        tableView.alpha = 0
        presenter?.updateView()
    }
    func getNewsRows(data: JSONDecoding.DialogsApi) -> [Layout] {
        var layouts = [Layout]()
        let user_id = UserDefaults.standard.integer(forKey: "user_id")
        for item in data.messages {
            var isMe = false
            if item.user_id == "\(user_id)" {
                isMe = true
            } else {
                isMe = false
            }
            layouts.append(DialogsLayout(text: item.text, isMe: isMe))
        }
        return layouts
    }
    private func reloadTableView(width: CGFloat, synchronous: Bool, data: JSONDecoding.DialogsApi) {
        reloadableViewLayoutAdapter.reloading(width: width, synchronous: synchronous, layoutProvider: { [weak self] in
            return [Section(header: nil, items: self?.getNewsRows(data: data) ?? [], footer: nil)]}) { let lastRowIndex = self.tableView.numberOfRows(inSection: 0) - 1
            let pathToLastRow = IndexPath(row: lastRowIndex, section: 0)
            self.tableView.scrollToRow(at: pathToLastRow, at: .bottom, animated: false)
            self.tableView.alpha = 1
        }
    }
}
