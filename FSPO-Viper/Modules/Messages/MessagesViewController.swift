//
//  MessagesViewController.swift
//  FSPO-Viper
//
//  Created Николай Борисов on 06/07/2018.
//  Copyright © 2018 Николай Борисов. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import LayoutKit

class MessagesViewController: UIViewController, MessagesViewProtocol {
    static var publicDS: JSONDecoding.MessagesApi?
    func showNewRows(source: JSONDecoding.MessagesApi) {
        MessagesViewController.publicDS = source
        reloadTableView(width: tableView.frame.width, synchronous: false, data: source)
    }
//    static var nav: UINavigationController?
	var presenter: MessagesPresenterProtocol?
    private var reloadableViewLayoutAdapter: ReloadableViewLayoutAdapter!
    private var tableView: UITableView!
	override func viewDidLoad() {
        super.viewDidLoad()
//        MessagesViewController.nav = self.navigationController
        tableView = UITableView(frame: view.bounds, style: .plain)
        tableView.autoresizingMask = [.flexibleWidth, .flexibleHeight]
        reloadableViewLayoutAdapter = MessagesReloadableViewLayoutAdapter(reloadableView: tableView)
        tableView.dataSource = reloadableViewLayoutAdapter
        tableView.delegate = reloadableViewLayoutAdapter
        tableView.separatorColor = .clear
        tableView.backgroundColor = UIColor.backgroundGray
        view.addSubview(tableView)
        presenter?.updateView()
    }
    func getNewsRows(data: JSONDecoding.MessagesApi) -> [Layout] {
        var layouts = [Layout]()
        let user_id = UserDefaults.standard.integer(forKey: "user_id")
        for item in data.dialogs {
            var message = ""
            if item.msg_user_id == user_id {
                message = "Я: \(item.msg_text)"
            } else {
                message = "\(item.msg_text)"
            }
            layouts.append(MessagesLayout(name: "\(item.dialog_firstname) \(item.dialog_lastname)", lastMessage: message, photo: UIImage(named: "test")!, date: DateToString().formatDate(item.msg_datetime)))
        }
        return layouts
    }
    private func reloadTableView(width: CGFloat, synchronous: Bool, data: JSONDecoding.MessagesApi) {
        reloadableViewLayoutAdapter.reloading(width: width, synchronous: synchronous, layoutProvider: { [weak self] in
            return [Section(header: nil, items: self?.getNewsRows(data: data) ?? [], footer: nil)]
        })
    }
}
extension MessagesReloadableViewLayoutAdapter {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
//        MessagesViewController.nav?.show(DialogRouter.createModule(), sender: MessagesViewController())
        UIApplication.shared.keyWindow?.rootViewController?.childViewControllers[2].show(DialogRouter.createModule(dialog_id: (MessagesViewController.publicDS?.dialogs[indexPath.row].dialog_user_id)!), sender: MessagesViewController())
        tableView.deselectRow(at: indexPath, animated: true)
    }
}
